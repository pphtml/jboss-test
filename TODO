- SPA servlet
  - CDN? dev vs. prod
  - use min.js variants
- testy regex service
- generate sample data - several variants
- prihlaseni se
- http://localhost:9090/api/regex?text=aaaaaaaaaaaaaaaaaaaaaaaaaaX&regex=%5E(a%2B)%2B$     (^(a+)+$)
- list node modules
- targetPath
- Response.java uses unchecked or unsafe operations Xlint:unchecked

- line breaks
- tags in text
- favicon
- error messages propagation to GUI

- https://dennis-xlc.gitbooks.io/restful-java-with-jax-rs-2-0-2rd-edition/en/part1/chapter1/introduction_to_rest.html
- https://www.freeformatter.com/java-regex-tester.html
- http://www.baeldung.com/jackson-optional
- route - https://codepen.io/patrickodacre/pen/zxwWPO/
- http://codersblock.com/blog/highlight-text-inside-a-textarea/
- POST regex

h1[data-v-20168b67], h2[data-v-20168b67] {
    font-weight: normal;
    background-color: blue;
}

<style type="text/css">
h1[data-v-20168b67], h2[data-v-20168b67] {
  font-weight: normal;
  background-color: blue
}
ul[data-v-20168b67] {
  list-style-type: none;
  padding: 0;
}
li[data-v-20168b67] {
  display: inline-block;
  margin: 0 10px;
}
a[data-v-20168b67] {
  color: coral;
}
</style>

<h1 data-v-20168b67=""></h1>


https://eclairjs.github.io/eclairjs-nashorn/docs/jsdoc/eclairjs_jvm-npm_jvm-npm.js.html
https://github.com/nodyn/jvm-npm/blob/master/src/main/javascript/jvm-npm.js
https://dzone.com/articles/vuejs-single-file-javascript-components-in-thenbsp

var path = require("path");
var localWebpack = require.resolve(path.join(process.cwd(), "node_modules", "webpack", "bin", "webpack.js"));

cd src/main/frontend
load('./java-node-bridge.js');
require.NODE_PATH='src/main/frontend/node_modules'
var path = require('path');
$JDK9_HOME/bin/jjs --language=es6 -scripting
load('./src/main/frontend/java-node-bridge.js');
var webpack = require('./webpack');
var compiler = webpack({entry: './entry', output: {filename: 'abc.out.js'}});
compiler.compile(()=>print('ahoj'));



const conf = new WebpackConf()

conf.setEntry(path.resolve('./src/entry.js'))
conf.setOutputPath(path.resolve(__dirname, 'build'))
conf.setOutputFilename('bundle.js')

const compiler = webpack(conf.config)



var SourceNode = require("source-map").SourceNode;
var SourceMapConsumer = require("source-map").SourceMapConsumer;



load('./jvm-npm.js');